<div id="side_toolbar" class="resizable draggable">

	<div id="toolbar">
		<div id="toolbar_header">
			<h1>Toolbar</h1>
		</div>
		<div id="toolbar_content">
		
		<button class="add_point">Add Point</button>
		
		<button class="add_observation">Add Observation</button>
		<button class="add_direction">Add Direction</button>
		<button class="add_distance">Add Distance</button>
		<button class="add_angle">Add Angle</button>
		<button class="add_slopeDistance">Add Slope Distance</button>
		<button class="add_zenithAngle">Add Zenith Angle</button>
		
		<button class="add_heightDifferences">Add Height Differences</button>
		<button class="add_heightDifference">Add Height Difference</button>
		
		<button class="add_coordinates">Add Coordinates</button>
		<button class="add_coordinate">Add Coordinate</button>

		<button class="add_vectors">Add Vectors</button>
		<button class="add_vector">Add Vector</button>
		
		<button class="add_covMat">Add Covariance Matrix</button>
		
		
		</div>
	</div>
</div>

<script>
jQuery(document).ready(function() {

//hiding toolbar 
jQuery("#collapse_link").click(function () {
	jQuery("#toolbar_content").toggle("slow");
});

});


function renderPoint(pointIndex) {
	var html = '<div class="point window"><span class="icon-close" role="button"></span><div class="title_bar"><label class="required" for="points[' + pointIndex + '].name">#springMessage("adjustment.onepage.point"):</label><input id="points[' + pointIndex + '].name" type="text" value="" name="points[' + pointIndex + '].name"></div><div class="window_content"><div class="point_form_element"><label for="points[' + pointIndex + '].x">X:</label><input id="points[' + pointIndex + '].x" type="text" value="" name="points[' + pointIndex + '].x"></div><div class="point_form_element"><label for="points[' + pointIndex + '].y">Y:</label><input id="points[' + pointIndex + '].y" type="text" value="" name="points[' + pointIndex + '].y"></div><div class="point_form_element"><label for="points[' + pointIndex + '].z">Z:</label><input id="points[' + pointIndex + '].z" type="text" value="" name="points[' + pointIndex + '].z"></div><div class="point_form_element"><label for="points[' + pointIndex + '].fix">Fix:</label><select id="points[' + pointIndex + '].fix" name="points[' + pointIndex + '].fix"><option value=""></option><option value="xy">xy</option><option value="XY">XY</option><option value="z">z</option><option value="Z">Z</option><option value="xyz">xyz</option><option value="XYZ">XYZ</option><option value="xyZ">xyZ</option><option value="XYz">XYz</option></select></div><div class="point_form_element"><label for="points[' + pointIndex + '].adj">Adj:</label><select id="points[' + pointIndex + '].adj" name="points[' + pointIndex + '].adj"><option value=""></option><option value="xy">xy</option><option value="XY">XY</option><option value="z">z</option><option value="Z">Z</option><option value="xyz">xyz</option><option value="XYZ">XYZ</option><option value="xyZ">xyZ</option><option value="XYz">XYz</option></select></div></div></div>';
	return html;
}

function renderObservation(clusterIndex) {
	var html = '<div class="observation window"><span class="icon-close" role="button"></span><input id="clusters['+ clusterIndex +'].tagname" type="hidden" value="obs" name="clusters[' + clusterIndex + '].tagname"><input id="clusters[' + clusterIndex + '].observation.id" type="hidden" value="" name="clusters[' + clusterIndex + '].observation.id"><div class="title_bar"><label class="required" for="">#springMessage("adjustment.onepage.observation")</label></div><div class="window_content"><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.from">#springMessage("observation.from"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.from" type="text" value="" name="clusters[' + clusterIndex + '].observation.from"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.orientation">#springMessage("observation.orientation"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.orientation" type="text" value="" name="clusters[' + clusterIndex + '].observation.orientation"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.fromDh">#springMessage("observation.fromDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.fromDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.fromDh"></div></div><div class="directions"> </div><div class="distances"> </div><div class="angles"> </div><div class="slopeDistances"> </div><div class="zenithAngles"> </div><div class="covMatWrap"> </div>  </div></div>';
	return html;
}

function renderDirection(clusterIndex, directionIndex) {
	var html = '<div class="direction window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].id"><div class="title_bar"><label class="required">#springMessage("adjustment.onepage.direction")</label></div><div class="window_content"><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].to">#springMessage("direction.to"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].to" type="text" value="" name="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].to"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].val">#springMessage("direction.val"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].val" type="text" value="" name="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].val"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].stdev">#springMessage("direction.stdev"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].stdev" type="text" value="" name="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].stdev"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].fromDh">#springMessage("direction.fromDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].fromDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].fromDh"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].toDh">#springMessage("direction.toDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].toDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.directions[' + directionIndex + '].toDh"></div></div></div></div>';
	return html;
}

function renderDistance(clusterIndex, distanceIndex) {
	var html = '<div class="distance window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].id"><div class="title_bar"><label class="required">#springMessage("adjustment.onepage.distance")</label></div><div class="window_content"><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].from">#springMessage("distance.from"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].from" type="text" value="" name="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].from"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].to">#springMessage("distance.to"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].to" type="text" value="" name="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].to"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].val">#springMessage("distance.val"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].val" type="text" value="" name="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].val"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].stdev">#springMessage("distance.stdev"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].stdev" type="text" value="" name="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].stdev"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].fromDh">#springMessage("distance.fromDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].fromDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].fromDh"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].toDh">#springMessage("distance.toDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].toDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.distances[' + distanceIndex + '].toDh"></div></div></div></div>';
	return html;
}

function renderAngle(clusterIndex, angleIndex) {
	var html = '<div class="angle window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].id"><div class="title_bar"><label class="required">#springMessage("adjustment.onepage.angle")</label></div><div class="window_content"><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].from">#springMessage("angle.from"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].from" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].from"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].bs">#springMessage("angle.bs"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].bs" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].bs"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fs">#springMessage("angle.fs"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fs" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fs"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].val">#springMessage("angle.val"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].val" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].val"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].stdev">#springMessage("angle.stdev"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].stdev" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].stdev"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fromDh">#springMessage("angle.fromDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fromDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fromDh"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].bsDh">#springMessage("angle.bsDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].bsDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].bsDh"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fsDh">#springMessage("angle.fsDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fsDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.angles[' + angleIndex + '].fsDh"></div></div></div></div>';
	return html;
}

function renderSlopeDistance(clusterIndex, slopeDistanceIndex) {
	var html = '<div class="slopeDistance window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].id"><div class="title_bar"><label class="required">#springMessage("adjustment.onepage.slopeDistance")</label></div><div class="window_content"><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].from">#springMessage("slopeDistance.from"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].from" type="text" value="" name="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].from"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].to">#springMessage("slopeDistance.to"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].to" type="text" value="" name="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].to"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].val">#springMessage("slopeDistance.val"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].val" type="text" value="" name="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].val"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].stdev">#springMessage("slopeDistance.stdev"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].stdev" type="text" value="" name="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].stdev"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].fromDh">#springMessage("slopeDistance.fromDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].fromDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].fromDh"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].toDh">#springMessage("slopeDistance.toDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].toDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.slopeDistances[' + slopeDistanceIndex + '].toDh"></div></div></div></div>';
	return html;
}

function renderZenithAngle(clusterIndex, zenithAngleIndex) {
	var html = '<div class="zenithAngle window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].id"><div class="title_bar"><label class="required">#springMessage("adjustment.onepage.zenithAngle")</label></div><div class="window_content"><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].from">#springMessage("zenithAngle.from"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].from" type="text" value="" name="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].from"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].to">#springMessage("zenithAngle.to"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].to" type="text" value="" name="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].to"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].val">#springMessage("zenithAngle.val"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].val" type="text" value="" name="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].val"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].stdev">#springMessage("zenithAngle.stdev"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].stdev" type="text" value="" name="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].stdev"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].fromDh">#springMessage("zenithAngle.fromDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].fromDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].fromDh"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].toDh">#springMessage("zenithAngle.toDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].toDh" type="text" value="" name="clusters[' + clusterIndex + '].observation.zenithAngles[' + zenithAngleIndex + '].toDh"></div></div></div></div>';
	return html;
}

function renderHeightDifferences(clusterIndex) {
	var html = '<div class="heightDifferencesWrap window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].tagname" type="hidden" value="height-differences" name="clusters[' + clusterIndex + '].tagname"><div class="title_bar"><label class="required" for="">#springMessage("adjustment.onepage.heightDifferences")</label></div><div class="window_content"><div class="heightDifferences"> </div><div class="covMatWrap"></div></div></div>';
	return html;
}

function renderHeightDifference(clusterIndex, heightDifferenceIndex) {
	var html = '<div class="heightDifference window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].id"><div class="title_bar"><label class="required" for="">#springMessage("adjustment.onepage.heightDifference")</label></div><div class="window_content"><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].from">#springMessage("heightDifference.from"):</label><div class="input"><input id="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].from" type="text" value="" name="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].from"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].to">#springMessage("heightDifference.to"):</label><div class="input"><input id="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].to" type="text" value="" name="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].to"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].val">#springMessage("heightDifference.val"):</label><div class="input"><input id="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].val" type="text" value="" name="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].val"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].stdev">#springMessage("heightDifference.stdev"):</label><div class="input"><input id="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].stdev" type="text" value="" name="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].stdev"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].dist">#springMessage("heightDifference.dist"):</label><div class="input"><input id="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].dist" type="text" value="" name="clusters[' + clusterIndex + '].heightDifferences[' + heightDifferenceIndex + '].dist"></div></div></div></div>';
	return html;
}

function renderCoordinates(clusterIndex) {
	var html = '<div class="coordinatesWrap window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].tagname" type="hidden" value="coordinates" name="clusters[' + clusterIndex + '].tagname"><div class="title_bar"><label class="required">#springMessage("adjustment.onepage.coordinates")</label></div><div class="window_content"><div class="coordinates"> </div><div class="covMatWrap"> </div></div></div>';
	return html;
}

function renderCoordinate(clusterIndex, coordinateIndex) {
	var html = '<div class="coordinate window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].id"><div class="title_bar"><label class="required" for="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].name">#springMessage("adjustment.onepage.coordinate"): </label><input id="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].name" type="text" value="" name="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].name"></div><div class="window_content"><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].x">X:</label><div class="input"><input id="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].x" type="text" value="" name="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].x"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].y">Y:</label><div class="input"><input id="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].y" type="text" value="" name="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].y"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].z">Z:</label><div class="input"><input id="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].z" type="text" value="" name="clusters[' + clusterIndex + '].coordinates[' + coordinateIndex + '].z"></div></div></div></div>';
	return html;
}

function renderVectors(clusterIndex) {
	var html = '<div class="vectorsWrap window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].tagname" type="hidden" value="vectors" name="clusters[' + clusterIndex + '].tagname"><div class="title_bar"><label class="required" for="">#springMessage("adjustment.onepage.vectors")</label></div><div class="window_content"><div class="vectors"> </div><div class="covMatWrap"></div></div></div>';
	return html;
}

function renderVector(clusterIndex, vectorIndex) {
	var html = '<div class="vector window"><span lass="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].id" type="hidden" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].id"><div class="title_bar"><label class="required" for="">#springMessage("adjustment.onepage.vector")</label></div><div class="window_content"><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].from">#springMessage("vector.from"):</label><div class="input"><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].from" type="text" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].from"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].to">#springMessage("vector.to"):</label><div class="input"><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].to" type="text" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].to"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dx">#springMessage("vector.dx"):</label><div class="input"><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dx" type="text" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dx"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dy">#springMessage("vector.dy"):</label><div class="input"><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dy" type="text" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dy"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dz">#springMessage("vector.dz"):</label><div class="input"><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dz" type="text" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].dz"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].fromDh">#springMessage("vector.fromDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].fromDh" type="text" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].fromDh"></div></div><div class="small_form_element"><label for="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].toDh">#springMessage("vector.toDh"):</label><div class="input"><input id="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].toDh" type="text" value="" name="clusters[' + clusterIndex + '].vectors[' + vectorIndex + '].toDh"></div></div></div></div>';
	return html;
}

function renderCovMat(clusterIndex) {
	var html = '<div class="covMat window"><span class="icon-close" role="button"></span><input id="clusters[' + clusterIndex + '].covMat.id" type="hidden" value="" name="clusters[' + clusterIndex + '].covMat.id"><div class="title_bar"><label class="required">#springMessage("adjustment.onepage.covMat")</label></div><div class="window_content"><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].covMat.dim">#springMessage("covMat.dim"):</label><div class="input"><input id="clusters[' + clusterIndex + '].covMat.dim" type="text" value="" name="clusters[' + clusterIndex + '].covMat.dim"></div></div><div class="small_form_element"><label class="required" for="clusters[' + clusterIndex + '].covMat.band">#springMessage("covMat.band"):</label><div class="input"><input id="clusters[' + clusterIndex + '].covMat.band" type="text" value="" name="clusters[' + clusterIndex + '].covMat.band"></div></div><div class="covmat_values"><textarea id="clusters[' + clusterIndex + '].covMat.values" name="clusters[' + clusterIndex + '].covMat.values"></textarea></div></div></div>';
	return html;
}


</script>